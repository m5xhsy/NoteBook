CSS的三种引入方式
- 行内样式
        <p style="closr:red;font-size=20px;">123456</p>
- 内接样式
        <style type='text/css'>
            span{closr:red;font-size=20px;}
        </style>

        <span>123456</span>

- 外接样式
        <link rel='stylesheet' href='./index.css'>



基本标签选择器
##############################1//标签选择器，选择的是共性//
p{
color:red;
}
##############################2//重置样式//
ul{
list-style:none;            去除前面的点
}
##############################3//类选择器//
<ul class='actreb abc'>
.actreb{
color:yellow
}
.abc{
font.size:30px;
}
##############################4//ID选择器//
<p id='ppx'>123</p>

#ppx{
color:red;
}
##############################5//通配符选择器//
*{
padding:0;         清空外边距
margin:0;
}



text-decoration:none            没有下划线
text-decoration:underline       有下划线
cursor:pointer                  鼠标显示小手



input{                          设置input框
border:none;                    清除边框
height:40px;                    设置变框高度
width:200px;                    设置变框宽度
border:1px solid #e0e0e0;       设置边框线厚度，实心，颜色
font-size:22px
}


##########################高级选择器
- 后代选择器*****
    所有后代都可以
    div ul li{
    color:blue;
    }
- 子代选择器
    只能是子代
    div>p{
    color:blue
    }
- 组合选择器
    div,span,p,a{
    color:blue;
    }
- 属性选择器
    form input[type='text']{ color:blue;}
    等号前面加^$表示开头和结尾

- 伪类选择器
    a:hover 必须位于 a:link 和 a:visited 之后
    a:active 必须位于 a:hover 之后
    /*没有被访问过a标签的样式*/
    a:link {
        color: green;
    }
    /*访问过后a标签的样式*/
    a:visited {
        color: yellow;
    }
    /*鼠标悬浮时a标签的样式*/
    a:hover {
        color: red;
    }
    /*鼠标摁住的时候a标签的样式*/
    a:active {
        color: blue;
    }
    /*鼠标悬浮在父类，子类变颜色*/
    .fathar:hover .zl{
    color:blue;
    display:block;
    }

- 伪元素选择器
    /*第一个字母大写*/
    p:first-letter{
    font-size:30px;
    color:red;
    }
    /*前面显示$*/
    p:before{
        content:'$'
    }
    /*后面显示%*/
    p:after{
        content:'%'
    }













.class                              .intro                      选择 class="intro" 的所有元素。 1
#id                                 #firstname                  选择 id="firstname" 的所有元素。 1
*                                   *                           选择所有元素。 2
element                             p                           选择所有 <p> 元素。 1
element,element                     div,p                       选择所有 <div> 元素和所有 <p> 元素。 1
element element                     div p                       选择 <div> 元素内部的所有 <p> 元素。 1
element>element                     div>p                       选择父元素为 <div> 元素的所有 <p> 元素。 2
element+element                     div+p                       选择紧接在 <div> 元素之后的所有 <p> 元素。 2
[attribute]                         [target]                    选择带有 target 属性所有元素。 2
[attribute=value]                   [target=_blank]             选择 target="_blank" 的所有元素。 2
[attribute~=value]                  [title~=flower]             选择 title 属性包含单词 "flower" 的所有元素。 2
[attribute|=value]                  [lang|=en]                  选择 lang 属性值以 "en" 开头的所有元素。 2
:link                               a:link                      选择所有未被访问的链接。 1
:visited                            a:visited                   选择所有已被访问的链接。 1
:active                             a:active                    选择活动链接。 1
:hover                              a:hover                     选择鼠标指针位于其上的链接。 1
:focus                              input:focus                 选择获得焦点的 input 元素。 2
:first-letter                       p:first-letter              选择每个 <p> 元素的首字母。 1
:first-line                         p:first-line                选择每个 <p> 元素的首行。 1
:first-child                        p:first-child               选择属于父元素的第一个子元素的每个 <p> 元素。 2
:before                             p:before                    在每个 <p> 元素的内容之前插入内容。 2
:after                              p:after                     在每个 <p> 元素的内容之后插入内容。 2
:lang(language)                     p:lang(it)                  选择带有以 "it" 开头的 lang 属性值的每个 <p> 元素。 2
element1~element2                   p~ul                        选择前面有 <p> 元素的每个 <ul> 元素。 3
[attribute^=value]                  a[src^="https"]             选择其 src 属性值以 "https" 开头的每个 <a> 元素。 3
[attribute$=value]                  a[src$=".pdf"]              选择其 src 属性以 ".pdf" 结尾的所有 <a> 元素。 3
[attribute*=value]                  a[src*="abc"]               选择其 src 属性中包含 "abc" 子串的每个 <a> 元素。 3
:first-of-type                      p:first-of-type             选择属于其父元素的首个 <p> 元素的每个 <p> 元素。 3
:last-of-type                       p:last-of-type              选择属于其父元素的最后 <p> 元素的每个 <p> 元素。 3
:only-of-type                       p:only-of-type              选择属于其父元素唯一的 <p> 元素的每个 <p> 元素。 3
:only-child                         p:only-child                选择属于其父元素的唯一子元素的每个 <p> 元素。 3
:nth-child(n)                       p:nth-child(2)              选择属于其父元素的第二个子元素的每个 <p> 元素。 3
:nth-last-child(n)                  p:nth-last-child(2)         同上，从最后一个子元素开始计数。 3
:nth-of-type(n)                     p:nth-of-type(2)            选择属于其父元素第二个 <p> 元素的每个 <p> 元素。 3
:nth-last-of-type(n)                p:nth-last-of-type(2)       同上，但是从最后一个子元素开始计数。 3
:last-child                         p:last-child                选择属于其父元素最后一个子元素每个 <p> 元素。 3
:root                               :root                       选择文档的根元素。 3
:empty                              p:empty                     选择没有子元素的每个 <p> 元素（包括文本节点）。 3
:target                             #news:target                选择当前活动的 #news 元素。 3
:enabled                            input:enabled               选择每个启用的 <input> 元素。 3
:disabled                           input:disabled              选择每个禁用的 <input> 元素 3
:checked                            input:checked               选择每个被选中的 <input> 元素。 3
:not(selector)                      :not(p)                     选择非 <p> 元素的每个元素。 3
::selection                         ::selection                 选择被用户选取的元素部分。 3

