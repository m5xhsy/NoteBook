并发：伪，执行速度特别快，感觉不到停顿
并行：真，创建10个同时操作

提高并发方案：
    多进程
    多线程
    单线程：
        - 异步非阻塞模块(Twisted)
        - 协程加IO切换(gevent和greenlet)

一个应用程序(软件)，可以有多个进程(默认只有一个)，一个进程可以创建多个线程(默认只有一个)

线程：
    工作的最小单元
    共享所有的资源
    每个线程可以分担一些任务，最终完成最后的结果
进程：
    资源分配的最小单元
    独立开辟空间
    进程之间数据隔离


GIL锁(全局解释器锁)
    限制一个进程中同一个时刻只有一个线程被调用
    所以java中一次进程可以多个线程被调用
    python中由于GIL锁一个进程只能一个线程被调用
    扩展：python默认GIL锁在执行100个指令后切换


总结：
    1.操作系统帮助我们操作硬件
    2.程序员写好代码依赖解释器在操作系统上运行
    3.程序员写好代码，通过解释器交给操作系统去执行，根据你的代码去选择创建多少个线程或者进程去执行，操作系统再调用硬件
    4.python多线程情况下：
        - 计算密集型操作      效率低(GIL锁)(一般用多进程，但是浪费资源)
        - IO操作              效率高
      Java多线程情况下：
        - 计算密集型          效率高
        - IO操作              效率高




